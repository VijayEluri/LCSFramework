package gr.auth.ee.lcs;


import gr.auth.ee.lcs.classifiers.ClassifierSet;
import gr.auth.ee.lcs.classifiers.DummySizeControlStrategy;
import gr.auth.ee.lcs.data.UpdateAlgorithmFactoryAndStrategy;
import gr.auth.ee.lcs.geneticalgorithm.BestClassifierSelector;
import gr.auth.ee.lcs.geneticalgorithm.INaturalSelector;

public class LCSExploitTemplate {

	public int classifiy(double[] dataInstance, ClassifierSet population) {
		 INaturalSelector selector=new BestClassifierSelector(true,UpdateAlgorithmFactoryAndStrategy.COMPARISON_MODE_EXPLOITATION);
		 
		//Generate MatchSet
		  ClassifierSet matchSet=new ClassifierSet(new DummySizeControlStrategy());
		  for (int i=0;i<population.getNumberOfMacroclassifiers();i++){
			  if ( population.getClassifier(i).isMatch(dataInstance)){
				  matchSet.addClassifier(population.getClassifier(i), population.getClassifierNumerosity(i),false);
			  }
		  }
		  
		  if (matchSet.getTotalNumerosity()==0) return -1;
		  ClassifierSet results=new ClassifierSet(new DummySizeControlStrategy());
		  selector.select(1, matchSet, results);
		  
		  return results.getClassifier(0).getActionAdvocated();
	  }

}